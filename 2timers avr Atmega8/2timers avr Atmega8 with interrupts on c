#include <avr/io.h>
#define F_CPU 8000000UL
#include <util/delay.h>
#include <avr/interrupt.h>

#define sbi(port_name, pin_number)   (port_name |= 1<<pin_number)
#define cbi(port_name, pin_number)   ((port_name) &= (uint8_t)~(1 << pin_number))
#define BAUD 9600
#define UBBRValue F_CPU/BAUD/16-1



void USART_init( uint8_t UBBR_val )
{
    sbi(DDRD, PIND1);
    cbi(DDRD, PIND0);
    sbi(PORTD, PIND0);
    UBRR0H = (uint8_t) (UBBR_val >> 8);
    UBRR0L = (uint8_t) UBBR_val;
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    UCSR0C = (1 << USBS0) | (3 << UCSZ00);
}


void TIMER0_init() 
{
  sbi(TCCR0A, WGM01);
  TCNT0 = 0;
  OCR0A = 127; //  TIMER1_INTERVAL
  sbi(TCCR2B, CS02); // prescale 256
  sbi(TIMSK0, OCIE0A); // enable interrupt on compare match A
}

void TIMER2_init()
{ 
    sbi(TCCR2A, WGM21); //CTC mode 
    TCNT2 = 0;
    OCR2A = 127; //  TIMER2_INTERVAL
    sbi(TCCR2B, CS22); // prescale 256
    sbi(TCCR2B, CS21); // prescale 256
    sbi(TIMSK2, OCIE2A); // enable interrupt on compare match A
}

void USART_transmit(char DATA)
{
    while (!(UCSR0A & (1 << UDRE0)));
    UDR0 = DATA;
}

int main(void)
{
    cli();
    sbi(SREG, 7); // global interrupt enable
    USART_init( UBBRValue );
    TIMER0_init();
    TIMER2_init();
    sei();
    while (1);
}


ISR(TIMER0_COMPA)
{
    USART_transmit('p');
    USART_transmit('i');
    USART_transmit('n');
    USART_transmit('g');
    USART_transmit('\r');
    USART_transmit('\n');
}

ISR(TIMER2_COMPA)
{
    USART_transmit('p');
    USART_transmit('o');
    USART_transmit('n');
    USART_transmit('g');
    USART_transmit('\r');
    USART_transmit('\n');
}
